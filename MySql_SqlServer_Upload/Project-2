Project 2

CREATE DATABASE SQLTESTE;

use SQLTESTE;

CREATE TABLE Postal(Codigo       Numeric(4)  PRIMARY KEY, 
                    Localidade   Char(30)    NOT NULL
                   );

INSERT INTO Postal VALUES(1000,'LISBOA');
INSERT INTO Postal VALUES(1100,'LISBOA');
INSERT INTO Postal VALUES(1200,'LISBOA');
INSERT INTO Postal VALUES(1500,'LISBOA');
INSERT INTO Postal VALUES(2000,'SANTAREM');
INSERT INTO Postal VALUES(2300,'TOMAR');
INSERT INTO Postal VALUES(3000,'COIMBRA');
INSERT INTO Postal VALUES(4000,'PORTO');
INSERT INTO Postal VALUES(9000,'FUNCHAL');


CREATE TABLE Pessoa(Id         NUMERIC           PRIMARY KEY, 
                    Nome       CHAR(30)          NOT NULL,
                    Idade      INTEGER           NOT NULL CHECK (Idade BETWEEN 0 AND 150),
                    Salario    NUMERIC(10,2)     NOT NULL,
                    Telefone   CHAR(12)          NULL,
                    Cod_Postal NUMERIC(4)        REFERENCES Postal(Codigo)
                   );
CREATE UNIQUE INDEX iNome ON Pessoa(Nome);
CREATE INDEX iTelefone ON Pessoa(Telefone);

INSERT INTO Pessoa VALUES(42,'Antonio Dias',43,74000,'789654',1500);
INSERT INTO Pessoa VALUES(5,'Celia Morais',26,170000,'123456',1100);
INSERT INTO Pessoa VALUES(32,'Florinda Simoes',35,147000,NULL,4000);
INSERT INTO Pessoa VALUES(37,'Isabel Espada',28,86000,NULL,1100);
INSERT INTO Pessoa VALUES(49,'Jose Antonio',17,210000,NULL,1500);
INSERT INTO Pessoa VALUES(14,'Nascimento Augusto',35,220000,'456123',2300);
INSERT INTO Pessoa VALUES(25,'Paulo Viegas',32,95000,NULL,1500);


CREATE TABLE Mensagem(Id_Msg     NUMERIC           PRIMARY KEY, 
                      Mensagem   CHAR(30)          NOT NULL
                     );
CREATE UNIQUE INDEX iMsg ON Mensagem(Mensagem);

INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(10,'Comissao de Vendas');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(20,'Fretes Individuais');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(30,'Fretes Empresas');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(40,'Vendas Extra');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(50,'Deslocacoes');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(60,'Refeicoes');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(70,'Combustiveis');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(80,'Transportes');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(90,'Telefonemas');
INSERT INTO Mensagem(Id_Msg, Mensagem) VALUES(100,'Ofertas');


CREATE TABLE Comissao(Id       NUMERIC          NOT NULL,
                      Id_Msg   NUMERIC          NOT NULL, 
                      Valor    NUMERIC          NOT NULL
                     );
CREATE INDEX iComissao ON Comissao(Id,Id_Msg);

INSERT INTO Comissao VALUES(14,10,10500);
INSERT INTO Comissao VALUES(25,10,2500);
INSERT INTO Comissao VALUES(14,100,3750);
INSERT INTO Comissao VALUES(14,70,400);
INSERT INTO Comissao VALUES(37,40,20);
INSERT INTO Comissao VALUES(37,30,14230);
INSERT INTO Comissao VALUES(37,10,5500);
INSERT INTO Comissao VALUES(14,60,2600);
INSERT INTO Comissao VALUES(25,30,370);
INSERT INTO Comissao VALUES(42,20,20);
INSERT INTO Comissao VALUES(37,50,120);
INSERT INTO Comissao VALUES(42,30,170);
INSERT INTO Comissao VALUES(49,20,2300);

/*Escreva o comando SQL que permite obter informação:
-> sobre a identificação, o Nome e o Código Postal de
	todas as pessoas presentes na base de dados
*/

select ID, Nome, Cod_Postal from Pessoa;


#Selecionar todas as pessoas com. 35 anos de idade


select * from Pessoa where idade = 35;

-- Selecionar o ID, Nome, Salario de todas as pessoas com idade para votar--

select ID, Nome, Idade, Salario from Pessoa where idade >= 18;

#selecionar a descrição de todas as mensagens cujo
#Id é diferente de 20

select * from Mensagem where not Id_Msg = 20;

#Seleciona as colunas Id, nome, idade, salario da tabela pessoas
select Id, Nome, Idade, Salario from Pessoa where Idade >= 30 && Idade <= 40;

#Selecionar o ID, nome , idade, salario de todas as pessoas que não fazem parte da seleção anterior
select Id, Nome, Idade, Salario from Pessoa where not (Idade >= 30 && Idade <= 40);
select Id, Nome, Idade, Salario from Pessoa where Idade < 30 || Idade > 40;

#Selecionar a Lista completa de Códigos Postais de Liboa e Tomar
select * from Postal where Localidade = 'Lisboa' || Localidade = 'Tomar';
select * from Postal where Localidade in ('Lisboa','Tomar');

#Selecionar o nome das pessoas sem telefone
select Nome from Pessoa where Telefone is null;

#Selecionar todos os nomes cujo segundo caracter é um 'a'
select Nome From Pessoa where substr(Nome, 2,1) = 'a';
select Nome from Pessoa where Nome like'_a%';

#Selecionar o nome e idade de todas as pessoas. Selecione tambem a idade que irão ter daqui a um ano
#O reseultado deverá vir ordenado por Nome
#Dentro do select permite fazer pequenos cálculos
#Select colunas Nome, Idade e cria uma terceira coluna que é idade mais 1 e renomear a coluna
select Nome, Idade, Idade + 1 AS idade_Proximo_Ano from Pessoa order by Nome;

#selecione, na tabela comissão, o campo valor a receber, o montante do Imposto (23%)
#e o valor liquido para os individuduos cujo o id é igual a 14 e 25
select Id, Valor as Liquido, Valor * 0.23 as Imposto, Valor * 1.23 as Bruto from Comissao where Id in(14,25);
